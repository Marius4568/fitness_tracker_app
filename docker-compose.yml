version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: fitness-tracker-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fitness_tracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fitness-network

  # Backend API
  backend:
    image: mariusurbonas100039/fitness-tracker-backend:latest
    build: ./fitness-tracker-backend
    container_name: fitness-tracker-backend
    environment:
      PORT: 5000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: fitness_tracker
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - fitness-network
    restart: unless-stopped

  # Frontend
  frontend:
    image: mariusurbonas100039/fitness-tracker-frontend:latest
    build: ./fitness-tracker-frontend
    container_name: fitness-tracker-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fitness-network
    restart: unless-stopped

networks:
  fitness-network:
    driver: bridge

volumes:
  postgres_data: